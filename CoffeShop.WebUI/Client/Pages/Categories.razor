@page "/categories"
@using CoffeShop.WebUI.Shared.Dtos
@using CoffeShop.WebUI.Client.Services
@inject IDataService DataService
@inject IJSRuntime JsRuntime


<PageTitle>List Category</PageTitle>

<h1>List Category</h1>

<NavLink class="btn btn-outline-primary" href="/create-category">
    Create
</NavLink>
@if (items is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Name</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in items)
            {
                <tr>
                    <td>@item.Id</td>
                    <td>@item.CategoryName</td>
                    <td>
                        <NavLink class="btn btn-outline-success" href="@($"/edit-category/{item.Id}")">
                            Edit
                        </NavLink>
                        <button type="button" @onclick="() => HandleDelete(item.Id)" class="btn btn-outline-danger">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<CategoryDto>? items;

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        items = await DataService.GetCategoriesAsync();
    }

    private async Task HandleDelete(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Are you sure?");
        if (confirmed)
        {
            var response = await DataService.DeleteCategoryAsync(id);
            if (response)
            {
                await LoadData();
            }
            else
            {
                await JsRuntime.InvokeAsync<bool>("alert", "Internal Server Error");
            }
        }
    }
}

